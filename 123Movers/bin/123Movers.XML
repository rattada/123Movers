<?xml version="1.0"?>
<doc>
    <assembly>
        <name>123Movers</name>
    </assembly>
    <members>
        <member name="T:_123Movers.FilterConfig">
            <summary>
            Filter config class
            </summary>
        </member>
        <member name="M:_123Movers.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)">
            <summary>
            
            </summary>
            <param name="filters"></param>
        </member>
        <member name="T:_123Movers.Controllers.BaseController">
            <summary>
            
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.BaseController.SaveCompanyId(System.Nullable{System.Int32})">
            <summary>
            Store Company ID
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.BaseController.RetrieveCurrentCompanyId">
            <summary>
            Get Service from Cookie
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.BaseController.SaveCompanyInfo(_123Movers.Models.CompanyModel)">
            <summary>
            Store Company Inforamtion
            </summary>
            <param name="companyInfo"></param>
        </member>
        <member name="M:_123Movers.Controllers.BaseController.RetrieveCurrentCompanyInfo(System.Nullable{System.Int32})">
            <summary>
            Get company information from Session
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.BaseController.GetTerms">
            <summary>
            Generate Term Types (Recurring, Non Recurring and Recurring with Notice)
            </summary>
            <returns> List of Term Types</returns>
        </member>
        <member name="M:_123Movers.Controllers.BaseController.GetServices(System.Nullable{System.Int32})">
            <summary>
            Generate Service Types(Local, Long and Both)
            </summary>
            <param name="serviceId">Select Service</param>
            <returns>List Of Services</returns>
        </member>
        <member name="P:_123Movers.Controllers.BaseController.CompanyId">
            <summary>
            Get CompanyId
            </summary>
        </member>
        <member name="P:_123Movers.Controllers.BaseController.CompanyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:_123Movers.Controllers.AreaCodeController">
            <summary>
            Area Code Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.AreaCodeController.GetAvailableAreas(System.Nullable{System.Int32})">
            <summary>
            Get Available Areas for compnay by service
            </summary>
            <param name="serviceId">Type of Service</param>
            <returns>List of Area Codes</returns>
        </member>
        <member name="M:_123Movers.Controllers.AreaCodeController.GetCompanyAreasWithPrices(System.Nullable{System.Int32})">
            <summary>
            Get Prices Per Lead
            </summary>
            <param name="serviceId">Type of Service</param>
            <returns>Area Codes With Prices</returns>
        </member>
        <member name="M:_123Movers.Controllers.AreaCodeController.AreaCodes(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Area Codes for budget by service
            </summary>
            <param name="companyId">companyID</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <returns></returns>
        </member>
        <member name="M:_123Movers.Controllers.AreaCodeController.AddAreaCodes(System.Nullable{System.Int32},System.String)">
            <summary>
            Add Area Codes to Active Budget
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="M:_123Movers.Controllers.AreaCodeController.DeleteAreaCodes(System.Nullable{System.Int32},System.String)">
            <summary>
            Delete Area Codes from Active Budget
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="M:_123Movers.Controllers.AreaCodeController.AddCompanyPricePerLead(System.Nullable{System.Int32},System.String)">
            <summary>
            Add price per lead to budget
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="T:_123Movers.Controllers.CheckSessionOutAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="T:_123Movers.Controllers.BudgetController">
            <summary>
            Budget related controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.GetFilterResult(System.Nullable{System.Int32})">
            <summary>
            Get Filter information
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <returns>Updated Filter Information</returns>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.AddBudget(_123Movers.Models.CompanyModel)">
            <summary>
            Enter Budget Information
            </summary>
            <param name="company">Company Model</param>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.AddBudget(_123Movers.Models.BudgetModel)">
            <summary>
            Add new budget to company
            </summary>
            <param name="budget">Budget Model</param>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.EditBudget(System.Nullable{System.Int32})">
            <summary>
            Modify the Budget details
            </summary>
            <param name="id">Budget Id</param>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.EditBudget(_123Movers.Models.BudgetModel)">
            <summary>
            Save modified budget
            </summary>
            <param name="budget">Budget Model</param>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.RenewBudget(System.Nullable{System.Int32})">
            <summary>
            Renewal the budget
            </summary>
            <param name="serviceId">Type of Service</param>
        </member>
        <member name="M:_123Movers.Controllers.BudgetController.BudgetFilterInfo(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Budget Filter Information
            </summary>
            <param name="companyId">CompanyId</param>
            <param name="serviceId">Type of Service</param>
            <returns></returns>
        </member>
        <member name="T:_123Movers.Controllers.DestinationAreaCodeController">
            <summary>
            Destination Area Code Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.DestinationAreaCodeController.GetCompanyDestAreas(System.Nullable{System.Int32})">
            <summary>
            Get Company Destination Area Codes by service
            </summary>
            <param name="serviceId">Type of Service</param>
            <returns>List of Destination Area Codes</returns>
        </member>
        <member name="M:_123Movers.Controllers.DestinationAreaCodeController.DestinationAreaCode(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Destination Area Codes
            </summary>
            <param name="companyId">Company Id</param>
            <param name="serviceId">Type of Service(Local, Long and Both)</param>
            <returns></returns>
        </member>
        <member name="M:_123Movers.Controllers.DestinationAreaCodeController.AddCompanyDestAreaCodes(System.Nullable{System.Int32},System.String)">
            <summary>
            Add Selected Area Codes to company by Service
            </summary>
            <param name="serviceId">Type of Service(Local, Long and Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="M:_123Movers.Controllers.DestinationAreaCodeController.DeleteCompanyDestAreaCodes(System.Nullable{System.Int32},System.String)">
            <summary>
            Delete Selected Area Codes to company by Service
            </summary>
            <param name="serviceId">Type of Service(Local, Long and Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="M:_123Movers.Controllers.DestinationAreaCodeController.Turn_ON_OFF_CompanyDestAreaCodes(System.Nullable{System.Int32},System.String)">
            <summary>
            Turn on/off the filter 
            </summary>
            <param name="serviceId">Type of Service(Local, Long and Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="T:_123Movers.Controllers.HomeController">
            <summary>
            Home Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.HomeController.Search">
            <summary>
            Get Method
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.HomeController.Search(_123Movers.Models.SearchModel)">
            <summary>
            Search the Company Information
            </summary>
            <param name="search">Search Model</param>
            <returns>List of Companies</returns>
        </member>
        <member name="M:_123Movers.Controllers.HomeController.GetBudget(_123Movers.Models.CompanyModel)">
            <summary>
            Get All budgets for company
            </summary>
            <param name="company">Company Details</param>
            <returns>List Of BudgetModel</returns>
        </member>
        <member name="M:_123Movers.Controllers.HomeController.AutocompleteSuggestions(System.String)">
            <summary>
            
            </summary>
            <param name="searchstring"></param>
            <returns></returns>
        </member>
        <member name="T:_123Movers.Controllers.LeadLimitController">
            <summary>
            Lead Limit Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.LeadLimitController.LeadLimit(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Leads Information of the Company
            </summary>
            <param name="companyId">Company Id</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.LeadLimitController.LeadLimit(System.Collections.Generic.List{System.Collections.Generic.List{_123Movers.Models.LeadLimitModel}})">
            <summary>
            Save the Leads Information
            </summary>
            <param name="leadlimit">Lead Limit Model</param>
        </member>
        <member name="T:_123Movers.Controllers.MoveDistanceController">
            <summary>
            Move Distance Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.MoveDistanceController.MoveDistance(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Existing Information
            </summary>
            <param name="companyId">Company Id</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.MoveDistanceController.MoveDistance(_123Movers.Models.MoveDistanceModel)">
            <summary>
            Save Distance for budget
            </summary>
            <param name="model"> Move Distance Model</param>
            <returns></returns>
        </member>
        <member name="M:_123Movers.Controllers.MoveDistanceController.GetMoveDistance(System.Nullable{System.Int32})">
            <summary>
            Get the Move Distance information for company by service
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="T:_123Movers.Controllers.MoveWeightController">
            <summary>
            Move Weight Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.MoveWeightController.MoveWeight(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Existing Data
            </summary>
            <param name="companyId">Company Id</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.MoveWeightController.MoveWeight(_123Movers.Models.MoveWeightModel)">
            <summary>
            Save Move Weight for budget
            </summary>
            <param name="model">Move Weight Model</param>
        </member>
        <member name="M:_123Movers.Controllers.MoveWeightController.GetMoveWeight(System.Nullable{System.Int32})">
            <summary>
            Get Move Weight Information for company by service
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="T:_123Movers.Controllers.NotificationController">
            <summary>
            Notification Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.NotificationController.Index">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:_123Movers.Controllers.NotificationController.Notifications">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:_123Movers.Controllers.OriginZipCodeController">
            <summary>
            Origin Zip Code Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.OriginZipCodeController.OriginZipCodes(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Origin Zip Codes for Company by Service
            </summary>
            <param name="companyId">Company Id</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.OriginZipCodeController.GetAreaCodeZipCodes(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Existing Origin Zip Codes for Service by Area Code
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCode">Selected Area Code</param>
            <retun>List of Origin Zip Codes</retun>
        </member>
        <member name="M:_123Movers.Controllers.OriginZipCodeController.GetAvailableZipCodes(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get All Origin Zip Codes for Service by Area Code
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCode">Selected Area Code</param>
            <retun>List of Origin Zip Codes</retun>
        </member>
        <member name="M:_123Movers.Controllers.OriginZipCodeController.AddCompanyAreaZipCodes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Add Origin Zip codes to company by service and area code
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCode">Origin Area Code</param>
            <param name="zipCodes">Selected Zip Codes</param>
        </member>
        <member name="M:_123Movers.Controllers.OriginZipCodeController.DeleteCompanyAreaZipCodes(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Delete Origin Zip codes to company by service and area code
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCode">Origin Area Code</param>
            <param name="zipCodes">Selected Zip Codes</param>
        </member>
        <member name="T:_123Movers.Controllers.RadiusController">
            <summary>
            Radius Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.RadiusController.Radius(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Get Method for Radius
            </summary>
            <param name="companyId">CompanyId</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.RadiusController.AddZipCodesByRadius(System.Nullable{System.Int32},System.Int32,System.Decimal,System.String)">
            <summary>
            Add the Zip Codes to Company
            </summary>
            <param name="service">Type of the Service(Local, Long Or Both)</param>
            <param name="zipcode">Zip Code</param>
            <param name="radius">Radius in miles</param>
            <param name="category">Lesser or Gratter</param>
        </member>
        <member name="M:_123Movers.Controllers.RadiusController.GetZipCodesByRadius(System.Nullable{System.Int32},System.Int32,System.Decimal,System.String)">
            <summary>
            Get Zip Codes By Radius.
            </summary>
            <param name="service">Type of the Service(Local, Long Or Both)</param>
            <param name="zipcode">Zip Code</param>
            <param name="radius">Radius in miles</param>
            <param name="category">Lesser or Gratter</param>
        </member>
        <member name="M:_123Movers.Controllers.RadiusController.AddAreaCodes(System.Nullable{System.Int32},System.String)">
            <summary>
            Add Area Codes to budget
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="areaCodes">Selected Area Codes</param>
        </member>
        <member name="T:_123Movers.Controllers.ReportController">
            <summary>
            
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.ReportController.Reports(_123Movers.Models.CompanyModel)">
            <summary>
            
            </summary>
            <param name="companyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:_123Movers.Controllers.SpecificOriginAreaCodesController">
            <summary>
            Specific Origin Area Codes Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.SpecificOriginAreaCodesController.GetAvailSpcfcOriginDestAreas(System.Nullable{System.Int32})">
            <summary>
            Get All Specific Origin Destination Area Codes
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.SpecificOriginAreaCodesController.GetCompanySpcfcOriginDestAreas(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Get Existing Specific Origin Destination Area Codes
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="spcfcareacode"> Selected Area Code</param>
        </member>
        <member name="M:_123Movers.Controllers.SpecificOriginAreaCodesController.SpecificOriginAreaCodes(System.Nullable{System.Int32})">
            <summary>
            Display the Specific Origin Area Codes by Service
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.SpecificOriginAreaCodesController.AddCompanySpcfcOriginDestAreaCodes(System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Add Specific Origin Destination Area Codes to Company
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="spcfcareacode">Specific Origin Area Code</param>
            <param name="areaCodes">Selected Destincation Area Codes</param>
        </member>
        <member name="M:_123Movers.Controllers.SpecificOriginAreaCodesController.DeleteCompanySpcfcOriginDestAreaCodes(System.Nullable{System.Int32},System.Int32,System.String)">
            <summary>
            Delete Specific Origin Destination Area Codes from Company
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="spcfcareacode">Specific Origin Area Code</param>
            <param name="areaCodes">Selected Destincation Area Codes</param>
        </member>
        <member name="T:_123Movers.Controllers.SpecificStatesController">
            <summary>
            Specific States Controller
            </summary>
        </member>
        <member name="M:_123Movers.Controllers.SpecificStatesController.GetAvailStates(System.Nullable{System.Int32})">
            <summary>
            Get All States for company by service
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <returns>List of States</returns>
        </member>
        <member name="M:_123Movers.Controllers.SpecificStatesController.GetCompanySpcfcOriginDestStates(System.Nullable{System.Int32},System.String,System.Boolean)">
            <summary>
            Get Existing States for company by service
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="originState"></param>
            <param name="isOriginState"></param>
            <returns>List of States</returns>
        </member>
        <member name="M:_123Movers.Controllers.SpecificStatesController.SpecificStates(System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            Display the Specific States by Service
            </summary>
            <param name="companyId">Company Id</param>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
        </member>
        <member name="M:_123Movers.Controllers.SpecificStatesController.AddCompanySpcfcOriginDeststates(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Add Specific States to Company
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="originState">Specific State</param>
            <param name="destStates">Selected Destination States</param>
        </member>
        <member name="M:_123Movers.Controllers.SpecificStatesController.DeleteCompanySpcfcOriginDeststates(System.Nullable{System.Int32},System.String,System.String)">
            <summary>
            Delete Specific States to Company
            </summary>
            <param name="serviceId">Type of the Service(Local, Long Or Both)</param>
            <param name="originState">Specific State</param>
            <param name="destStates">Selected Destination States</param>
        </member>
    </members>
</doc>
