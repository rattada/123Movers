@model _123Movers.Models.DestinationZipModel

@{
    ViewBag.Title = "DestinationZipCodes";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Html.AntiForgeryToken()
@Html.ValidationSummary(true)

<input type="hidden" id="message" value="@ViewBag.Success"/>
<input type="hidden" id="orgareacodes" value="@Model.DestinationAreaCodes" />
<input type="hidden" id="orgzipcodes" value="@Model.DestinationZipCodes" />
<div class="row">

       @* @Html.Partial("_CompanyInfo", @Model)*@
     @Html.Partial("_CompanyInfo")
     
    </div>
<p class="clearfix"></p>
<p class="clearfix"></p>
 <div class="table-responsive" id ="divOrigin">
      <table id="tbOrigin" class="table table-striped table-bordered">
          <thead>
              <tr><th class="text-center"  colspan="10"><strong>Destination Zip To Multiple Area Code</strong></th></tr>
              <tr>
                  <th class="text-center">Service</th>
                  <th class="text-center">Area Code</th>
                  <th  class="text-center">Destination Zip Filter On</th>
              </tr>
              
          </thead>
          <tbody>
              @if (@Model != null)
              {
                  if (@Model.DestinationAreaCodes.Count() > 0)
                  {

                      foreach (var DestinationAreaCode in Model.DestinationAreaCodes)
                      {
                          <tr>
                              <td class="text-center">
                                  @{
                          var service = @DestinationAreaCode.ServiceId == 1000 ? "Long" : "Local";
                                  }
                                  @service
                              </td>
                              <td id ="areacode" class="text-center">
                                  @DestinationAreaCode.AreaCode
                              </td>
                              <td class="text-center">
                                  @{
                          var zipcodes = @Model.DestinationZipCodes.Where(x => x.AreaCode == @DestinationAreaCode.AreaCode && x.ServiceId == @DestinationAreaCode.ServiceId).Select(x => x.ZipCode).ToList();
                                   }
                              
                                  @if(@zipcodes.Count() > 0)
                                  {
                                     <b>YES --> @zipcodes.Count() ZipCodes - </b> <a id="zipcodes" href="#" data-toggle="modal" data-target="#myModal" data-id="@DestinationAreaCode.AreaCode" onclick="GetZipCodes(@DestinationAreaCode.AreaCode,@DestinationAreaCode.ServiceId)">View</a>
                                  }
                                  else
                                  {
                                      
                                      <a id="zipcodes1" href="#" data-toggle="modal" data-target="#myModal" data-id="@DestinationAreaCode.AreaCode" onclick="GetZipCodes(@DestinationAreaCode.AreaCode,@DestinationAreaCode.ServiceId)">Add Destination ZipCodes</a>
                                  }
                                  
                              </td>
                          </tr>
                      }
                  }
              }
          </tbody>
      </table>
 </div>

 <div class="row">
        @*<input  type="button" id="saveleads" class="btn btn-primary pull-right" value="Save Leads" />*@
        <a href="#" onclick="history.go(-1);return false;" class="btn btn-primary btnSpacing">Back To Edit</a>
    
    </div>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title text-center" id="myModalLabel">Destination Zip Codes</h4>
      </div>
      <div class="modal-body text-center">
        <select name="areaZipCode" id="areaZipCode" size="20" style="width: 150px" multiple>
                </select>


                <input type="button" id="add" value="Add -->" class="btn btn-primary btn-Add" />
                <input type="button" id="remove" value="<-- Remove" class="btn btn-primary btn-Remove">


                <select name="areaZipSelected" id="areaZipSelected" style="width: 150px" size="20" multiple>
                </select>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal" id="close">Close</button>
        @*<button type="button" class="btn btn-primary" id="saveZipCodes">Save changes</button>*@
      </div>
    </div>
  </div>
</div>



<script type="text/javascript">
   // $(function () {
        //var orgarea = $('#orgareacodes').val();
    var areacode;
    var serviceid;
    function GetZipCodes(areaCode, serviceId) {
        serviceid = serviceId;
        areacode = areaCode
        $.ajax({
            url: '/Home/GetAvailableDestinationZipCodes',
            type: "GET",
            data: { 'companyId': '@HttpContext.Current.Application["CompanyId"]', 'serviceId': serviceId, 'areaCode': areaCode },
                dataType: "json",
                cache: false,
                success: function (data) {
                    var strigifyJson = JSON.stringify(data);
                    var json = $.parseJSON(strigifyJson);
                    var table;
                    var options = '<option value=""></option>';
                    jQuery.each(json, function (i, val) {
                        if (i == 0) {
                            options = '<option value="' + val[0] + '">' + val[0] + '</option>';
                        } else {
                            options += '<option value="' + val[0] + '">' + val[0] + '</option>';
                        }
                    });

                    if (json.length > 0) {
                        $('#areaZipCode').html(options);
                    }

                },
                error: function (xhr, ajaxOptions, thrownError) {

                }
        });
           
        $.ajax({
            url: '/Home/GetCompanyAreasDestinationZipCodes',
            type: "GET",
            data: { 'companyId': '@HttpContext.Current.Application["CompanyId"]', 'serviceId': serviceId, 'areaCode': areaCode },
            dataType: "json",
            cache: false,
            success: function (data) {
                var strigifyJson = JSON.stringify(data);
                var json = $.parseJSON(strigifyJson);
                var table;
                var options = '<option value=""></option>';
                jQuery.each(json, function (i, val) {
                    if (i == 0) {
                        options = '<option value="' + val[0] + '">' + val[0] + '</option>';
                    } else {
                        options += '<option value="' + val[0] + '">' + val[0] + '</option>';
                    }
                });

                if (json.length > 0) {
                    $('#areaZipSelected').html(options);
                }

            },
            error: function (xhr, ajaxOptions, thrownError) {

            }
        });


        }
        

    $('#add').click(function () {
        var selected = [];
        //if ($('#areaZipSelected').length == 1 && $('#areaZipSelected option:first').val() != undefined)
        //{
        //    if ($('#areaZipSelected option:first').val().trim() == '')
        //    { $('#areaZipSelected option:first').remove(); }
            
        //}
        $('#areaZipCode :selected').each(function (i, el) {
            selected[i] = $(this).val();
            $("#areaZipCode option:selected").remove();
            
            $("#areaZipSelected").append($(this));
        });
        if (selected.length == 0) {
            alert('Please Select ZipCode');
            return false;
        }
        else {
            var zipcodes = JSON.stringify(selected);
            $.ajax({
                url: '/Home/AddCompanyAreaDestinationZipCodes',
                type: "POST",
                data: { 'companyId': '@HttpContext.Current.Application["CompanyId"]', 'serviceId': serviceid, 'areaCode': areacode, 'zipCodes': zipcodes },
            success: function (data) {
                if (data.success === true) {
                    alert('Zip Codes Successfully Added');
                } else {
                    alert("Error :" + data.message);
                }
                // location.reload();
            },
            error: function (xhr, ajaxOptions, thrownError) {

            }
        });
    }
       
        
     });

        $('#remove').click(function () {
            var selected = [];
            $('#areaZipSelected :selected').each(function (i, el) {
                selected[i] = $(this).val();
                $("#areaZipSelected option:selected").remove();
                $("#areaZipCode").append($(this));
            });
            if (selected.length == 0) {
                alert('Please Select ZipCode');
                return false;
            } else {
                var zipcodes = JSON.stringify(selected);
                $.ajax({
                    url: '/Home/DeleteCompanyAreaDestinationZipCodes',
                    type: "POST",
                    data: { 'companyId': '@HttpContext.Current.Application["CompanyId"]', 'serviceId': serviceid, 'areaCode': areacode, 'zipCodes': zipcodes },
                success: function (data) {
                    if (data.success === true) {
                        alert('Zip Codes Successfully Deleted');
                    } else {
                        alert("Error :" + data.message);
                    }
                    // location.reload();
                },
                error: function (xhr, ajaxOptions, thrownError) {

                }
            });
            }
           
         
        });
    $('#close').click(function () {
        //$('#body').on('change', 'select', function (e) {
        //    location.reload();
        //});
        location.reload();
    });
       
   // });
</script>