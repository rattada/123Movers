@model _123Movers.Models.MoveWeightModel
@{
    ViewBag.Title = "MoveWeight";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@Html.AntiForgeryToken()
@Html.ValidationSummary(true)


<div class="row">

       @* @Html.Partial("_CompanyInfo", @Model)*@
     @Html.Partial("_CompanyInfo")
     
    </div>
<p class="clearfix"></p>
<p class="clearfix"></p>

<input type="hidden" id="message" value="@ViewBag.Success"/>
@using (Html.BeginForm("MoveWeight", "Home", FormMethod.Post, new { id = "frmMoveWeight" }))
{
<div class="row">
    <div class="col-lg-4">
        <div class="form-group">
            @Html.LabelFor(m => m.ServiceId)
            @Html.DropDownListFor(m => m.ServiceId, ViewBag.Services as IEnumerable<SelectListItem>,"--Choose One--", new { id = "services", @class = "form-control dropdown", @title = "Select Services" })
            @Html.ValidationMessageFor(m => m.ServiceId)
        </div></div>
         <div class="col-lg-4">
        <div class="form-group">
            @Html.LabelFor(m => m.MinMoveWeightSeq)
            @Html.DropDownListFor(m => m.MinMoveWeightSeq, ViewBag.MinMoveWeight as IEnumerable<SelectListItem>, "--Choose One--", new { id = "minMoveWeight", @class = "form-control dropdown", @title = "Select Min Move Weight" })
            @Html.ValidationMessageFor(m => m.MinMoveWeightSeq)
        </div></div>
              <div class="col-lg-4">
         <div class="form-group">
            @Html.LabelFor(m => m.MaxMoveWeightSeq)
            @Html.DropDownListFor(m => m.MaxMoveWeightSeq, ViewBag.MinMoveWeight as IEnumerable<SelectListItem>, "--Choose One--", new { id = "maxMoveWeight", @class = "form-control dropdown", @title = "Select Max Move Weight" })
            @Html.ValidationMessageFor(m => m.MaxMoveWeightSeq)
        </div></div>
    
</div>

<div class="row">
    <input type="button" id="savemoveweight" class="btn btn-primary pull-right" value="Save" />
    <a href="#" onclick="history.go(-1);return false;" class="btn btn-primary btnSpacing">Back To Edit</a>


</div>
}

<script type="text/javascript">
    $(function () {
        var message = $.trim($('#message').val());
        if (typeof message === 'undefined' || message.length <= 0) { } else { alert(message); }

        var orgMax = $('#maxMoveWeight option:selected').val();
        var orgMin = $('#minMoveWeight option:selected').val();

        $('#savemoveweight').click(function () {
            var serviceId = $('#services').val().trim();
            var max = $('#maxMoveWeight option:selected').val();
            var min = $('#minMoveWeight option:selected').val();

            if (serviceId == '' || serviceId == undefined) {
                alert('Please Select Service Type');
                $("#services").focus();
                return false;
            } else {
                if ($("#minMoveWeight").val() <= 0)
                {
                    alert('Please Select Min Move Weight Value');
                    $("#minMoveWeight").focus();
                    return false;
                }
                if ($("#maxMoveWeight").val() <= 0)
                {
                    alert('Please Select Max Move Weight Value');
                    $("#maxMoveWeight").focus();
                    return false;
                }
                if (parseInt(min) >= parseInt(max)) {
                    alert('Min Move Weight Should be Less Than Max Move Weight');
                    $('#minMoveWeight').val(orgMin).attr("selected", "selected");
                    $('#maxMoveWeight').val(orgMax).attr("selected", "selected");
                    return false;
                } else {
                    orgMax = $('#maxMoveWeight option:selected').val();
                    orgMin = $('#minMoveWeight option:selected').val();
                }
            }

            var ModelData =
               {
                   ServiceId: serviceId,
                   MinMoveWeightSeq: orgMin,
                   MaxMoveWeightSeq: orgMax

               };
            $.ajax({
                url: '/Home/MoveWeight',
                type: "POST",
                data: ModelData,
                cache: false,
                success: function (data) {
                    alert("MoveWeight  data successfully saved");
                },
                error: function (xhr, ajaxOptions, thrownError) {

                }
            });



        });
        $('#services').on("change", function () {
            var serviceId = $('#services option:selected').val();
            if (serviceId != '') {
                $.ajax({
                    url: '/Home/GetMoveWeight',
                    type: "GET",
                    data: { 'ServiceId': serviceId },
                    cache: false,
                    success: function (data) {
                        var strigifyJson = JSON.stringify(data);
                        var json = $.parseJSON(strigifyJson);
                        if (json.length > 0) {
                            $('#minMoveWeight').val(json[0][2]).attr("selected", "selected");
                            $('#maxMoveWeight').val(json[0][3]).attr("selected", "selected");

                            orgMax = $('#maxMoveWeight option:selected').val();
                            orgMin = $('#minMoveWeight option:selected').val();
                        }
                        else {
                            $("#minMoveWeight option:first").attr('selected', 'selected');
                            $("#maxMoveWeight option:first").attr('selected', 'selected');
                        }
                        //  location.reload();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {

                    }
                });
            }
            else {
                $("#minMoveWeight option:first").attr('selected', 'selected');
                $("#maxMoveWeight option:first").attr('selected', 'selected');
            }
        });
        //$('#minMoveWeight').on("change", function () {
        //    var max = $('#maxMoveWeight option:selected').val();
        //    var min = $('#minMoveWeight option:selected').val();
        //    if (parseInt(min) >= parseInt(max))
        //    {
        //        alert('Min Move Weight Should be Less Than Max Move Weight');
        //        $('#minMoveWeight').val(orgMin).attr("selected", "selected");
        //        return false;
        //    } else {
        //        orgMax = $('#maxMoveWeight option:selected').val();
        //        orgMin = $('#minMoveWeight option:selected').val();
        //    }
        //});

        //$('#maxMoveWeight').on("change", function () {
        //    var max = $('#maxMoveWeight option:selected').val();
        //    var min = $('#minMoveWeight option:selected').val();
        //    if (parseInt(max) <= parseInt(min)) {
        //        alert('Max Move Weight Should be Grater Than Min Move Weight');
        //        $('#maxMoveWeight').val(orgMax).attr("selected", "selected");
        //        return false;
        //    }
        //    else {
        //        orgMax = $('#maxMoveWeight option:selected').val();
        //        orgMin = $('#minMoveWeight option:selected').val();
        //    }
        //});

    });
</script>
