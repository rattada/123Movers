@model  _123Movers.Models.DistanceModel

@using _123Movers.Models;
@{
    ViewBag.Title = "Edit Budget";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<input type="hidden" id="message" value="@ViewBag.Success"/>

<div class="row">

    @Html.Partial("_CompanyInfo")

</div>
<p class="clearfix"></p>
<p class="clearfix"></p>

@Html.AntiForgeryToken()
@Html.ValidationSummary(true)

@using (Html.BeginForm("Distance", "Home", FormMethod.Post, new { id = "frmDistance" }))
{

    <p class="clearfix"></p>
    <div class="row">
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.ServiceId)
                @Html.DropDownListFor(m => m.ServiceId, ViewBag.Services as IEnumerable<SelectListItem>, "--Choose One--", new { id = "ddlServiceID", @class = "form-control dropdown", @title = "Select Services" })
                @Html.ValidationMessageFor(m => m.ServiceId)
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.MinMoveDistance)
                @Html.TextBoxFor(m => m.MinMoveDistance, new { @class = "form-control", Value = String.Format("{0:0.00}", Model.MinMoveDistance) })
                @Html.ValidationMessageFor(m => m.MinMoveDistance)
            </div>
        </div>
        <div class="col-lg-4">
            <div class="form-group">
                @Html.LabelFor(m => m.MaxMoveDistance)
                @Html.TextBoxFor(m => m.MaxMoveDistance, new { @class = "form-control", Value = String.Format("{0:0.00}", Model.MaxMoveDistance) })
                @Html.ValidationMessageFor(m => m.MaxMoveDistance)
            </div>
        </div>
    </div>
    

@*
    <div class="row">
    <div class="table-responsive">
        <table id="tblDistance" class="table table-striped table-bordered">

            <thead>
                <tr>
                    <th class="text-center">Service</th>
                    <th class="text-center">Minimum Weight </th>
                    <th class="text-center">Maximum Weight</th>

                </tr>

            </thead>
            <tbody>
                <tr>
                    <td>
                    
                        @Html.DropDownListFor(m => m.ServiceId, ViewBag.Services as IEnumerable<SelectListItem>, "--Choose One--", new { id = "ddlServiceID", @class = "form-control dropdown", @title = "Select Services" })
                        @Html.ValidationMessageFor(m => m.ServiceId)

                    <td >
                            @Html.TextBoxFor(m => m.MinMoveWeight, new { @class = "form-control", Value = String.Format("{0:0.00}", Model.MinMoveWeight) })
                            @Html.ValidationMessageFor(m => m.MinMoveWeight)
                    <td>
                        <div class="form-group">
                        @Html.TextBoxFor(m => m.MaxMoveWeight, new { @class = "form-control", Value = String.Format("{0:0.00}", Model.MaxMoveWeight) })
                            @Html.ValidationMessageFor(m => m.MaxMoveWeight)</div></td>

                </tr>
            </tbody>
        </table>

    </div>
   </div>*@
        
       
    <div class="row">
        <input type="submit" value='Save Distance' id='saveDistance' class="btn btn-primary pull-right" />
        <a href="#" onclick="history.go(-1);return false;" class="btn btn-primary btnSpacing">Back To Edit</a>

    </div>
}
<script type="text/javascript">
    $(function () {

        var message = $.trim($('#message').val());
        if (typeof message === 'undefined' || message.length <= 0) { } else { alert(message); }

        var orgMinWeight = $("#MinMoveDistance").val();
        var orgMaxWeight = $("#MaxMoveDistance").val();

        $("body").parent().on('click', "#saveDistance", function () {

            var serviceId = $('#ddlServiceID').val();
            var minWeight = $.trim($("#MinMoveDistance").val());
            var maxWeight =  $.trim($("#MaxMoveDistance").val());

            if (serviceId != null && serviceId != '') {
                if ((minWeight.length == 0 && maxWeight.length == 0) || (parseInt(minWeight) == 0 && parseInt(maxWeight) == 0 )) {
                    alert('Please enter atleast one Weight');
                    return false;

                }

            }
        });
        $('#ddlServiceID').on("change", function () {
            var serviceId = $('#ddlServiceID option:selected').val();

            $.ajax({
                url: '/Home/GetDistance',
                type: "GET",
                data: { 'ServiceId': serviceId },
                cache: false,
                success: function (data) {
                    var strigifyJson = JSON.stringify(data);
                    var json = $.parseJSON(strigifyJson);
                    if (json.length > 0) {
                        $("#MinMoveDistance").val(json[0][1]);
                        $("#MaxMoveDistance").val(json[0][2]);
                    }
                    else {
                        $("#MinMoveDistance").val('');
                        $("#MaxMoveDistance").val('');
                    }
                    //  location.reload();
                },
                error: function (xhr, ajaxOptions, thrownError) {

                }
            });
        });

        //$('#MinMoveDistance').keydown(function () { alert('123');});
        $('#MinMoveDistance').on("focusout", function () {
            var minWeight = $("#MinMoveDistance").val();
            var maxWeight = $("#MaxMoveDistance").val();
            if (parseInt(minWeight) >= parseInt(maxWeight) && parseInt(maxWeight) != 0) {
                alert('Min Move Weight Should be Less Than Max Move Weight');
                $("#MinMoveDistance").val(orgMinWeight);
                return false;
            }
            else {
                orgMinWeight = $("#MinMoveDistance").val();
                orgMaxWeight = $("#MaxMoveDistance").val();
            }

        });

        $('#MaxMoveDistance').on("focusout", function () {
            var minWeight = $("#MinMoveDistance").val();
            var maxWeight = $("#MaxMoveDistance").val();
            if (parseInt(minWeight) >= parseInt(maxWeight) && parseInt(minWeight) != 0) {
                alert('Max Move Weight Should be Grater Than Min Move Weight');
                $("#MaxMoveDistance").val(orgMaxWeight);
                return false;
            }
            else {
                orgMinWeight = $("#MinMoveDistance").val();
                orgMaxWeight = $("#MaxMoveDistance").val();
            }

        });

    });
</script>
