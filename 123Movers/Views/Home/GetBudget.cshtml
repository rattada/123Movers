@model _123Movers.Models.BudgetModel
@using _123Movers.Models;

@{
    ViewBag.Title = "GetBudget";
   
}
@section JavaScript{
    @Html.Script("jquery.dataTables.min.js")
    @Html.Script("getBudget.js")
    @Html.Script("jquery.loadmask.min.js")
}

@Html.Partial(Constants.VIEW, @Model._companyInfo)

<p class="clearfix"></p>
@if (@Model != null)
{
    <div>
        <h2>Current Budgets</h2>
        <div class="row">
            <div class="col-md-12">
                <p>@Html.ActionLink("Add Budget", "AddBudget", "Budget",  new { companyid = @Model._companyInfo.CompanyId, companyName = @Model._companyInfo.CompanyName, ax = @Model._companyInfo.AX, contactperson = @Model._companyInfo.ContactPerson, suspended = @Model._companyInfo.Suspended, isactive = @Model._companyInfo.IsActive }, new { id = "AddBudget", @class = "btn btn-primary btn-lg" })</p>
            </div>
        </div>
        <p class="clearfix"></p>
        <div class="table-responsive">
            <table id="ActiveInfo" class="table table-hover table-bordered">
                <thead>
                    <tr>
                       @* <th class="text-center">Insertion Order Id
                        </th>*@
                        <th class="text-center">Start Date
                        </th>
                        <th class="text-center">Budget Amount
                        </th>
                        <th class="text-center">Remaining Budget
                        </th>
                        <th class="text-center">Terms
                        </th>
                        <th class="text-center">Service
                        </th>
                        <th class="text-center">Filters
                        </th>
                        <th class="text-center">Renew
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
    //List<BudgetModel> activeBudget = Model.budget.Where(c => c.EndDate >= DateTime.Now || c.EndDate == null || c.RemainingBudget >= 0).OrderByDescending(c => c.ServiceId).ToList();
    //List<BudgetModel> activeBudget = Model.budget.Where(c => c.IsActive).ToList();
    List<BudgetModel> activeBudget = Model._currentBudgets;
                    }
                    @if (activeBudget.Count > 0)
                    {
                        foreach (var budget in activeBudget)
                        {
                        <tr>
                            @*<td class="text-center">
                                @budget.InsertionOrderId
                            </td>*@
                            <td class="text-center">
                                @{
                            var sdate = @budget.StartDate.HasValue ? @DateTime.Parse(@budget.StartDate.ToString()).ToShortDateString() : null;
                                }
                                @sdate
                            </td>
                            <td class="text-center">
                                @string.Format("{0:c}", @budget.TotalBudget)
                            </td>
                            <td class="text-center">
                                @string.Format("{0:c}", @budget.RemainingBudget)
                            </td>
                            <td class="text-center">
                                @{
                            var Recurring = ((bool)@budget.IsRecurring) ? ((bool)@budget.IsRequireNoticeToCharge) ? "Recurring With Notice" : "Recurring" : "Non Recurring";
                                }
                                @Recurring
                            </td>
                            <td class="text-center">
                                @{
                            var Service = (@budget.ServiceId == Constants.LOCAL) ? "Local" : (@budget.ServiceId == Constants.LONG) ? "Long" : "Both";
                                }
                                @Service
                            </td>
                            <td class="text-center">
                                @Html.ActionLink("Edit", "EditBudget", "Budget", new {CompanyId = @budget.CompanyId, TotalBudget = @budget.TotalBudget, IsRecurring = @budget.IsRecurring, IsRequireNoticeToCharge = @budget.IsRequireNoticeToCharge, ServiceId = @budget.ServiceId, agnumber = @budget.AgreementNumber, minDaysToCharge = @budget.MinDaysToCharge, id = @budget.tId }, new { @class = "btn btn-sm btn-info editBudget" })
                            </td>
                            <td class="text-center">
                                @if (@Recurring == "Recurring With Notice")
                                {
                                    @*<p><input type="button" value="Renew" id="activeRenew@(budget.ServiceId)"  data-id ="@budget.ServiceId" class = "btn btn-sm btn-info renewBudget"/></p>*@
                                   if(@budget.IsOneTimeRenew)
                                    {
                                        <input type="button" value="Renewed" id="activeRenew@(budget.ServiceId)"  data-id ="@budget.ServiceId" data-cid ="@budget.CompanyId" class = "btn btn-sm btn-info renewBudget"  disabled="disabled"/>
                                    }
                                    else
                                    {
                                        <input type="button" value="Renew" id="activeRenew@(budget.ServiceId)"  data-id ="@budget.ServiceId" data-cid ="@budget.CompanyId" class = "btn btn-sm btn-info renewBudget"/>
                                    }
                                }
                            </td>
                        </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td class="col-md-6 text-center" colspan="10"><b>No record(s) found</b>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <h2>Past Budgets</h2>

        @*<div class="row">
            <div class="col-md-6">
                <p><strong>Total Billed    :</strong> @ViewBag.TotalBilled</p>
            </div>
            <div class="col-md-6">
                <p><strong>Total Uncharged :</strong> @ViewBag.UnchargedAmount</p>
            </div>
        </div>*@
        <div class="table-responsive ">
            <table id="ExpiredInfo" class="table table-bordered table-striped table-hover">
                <thead>
                    <tr>
                        @*<th class="text-center">Insertion Order ID
                        </th>*@
                        <th class="text-center">Start Date
                        </th>
                        <th class="text-center">End Date
                        </th>
                        <th class="text-center">Total Budget
                        </th>
                        @*<th class="text-center">Uncharged Amount
                        </th>*@
                        <th class="text-center">Terms
                        </th>
                        <th class="text-center">Service
                        </th>
                       @* <th class="text-center">Renew
                        </th>*@
                    </tr>
                </thead>
                <tbody>
                    @{
                    //List<BudgetModel> expiredBudget = Model.budget.Where(c => c.IsActive == false).ToList();
    List<BudgetModel> expiredBudget = Model._pastBudgets;
                    //for (int i = 0; i < expiredBudget.Count; i++)
                    //{
                        
                    //    for (int j = 0; j < activeBudget.Count; j++)
                    //    {
                    //        if (activeBudget[j].TotalBudget == expiredBudget[i].TotalBudget && activeBudget[j].StartDate == expiredBudget[i].StartDate && activeBudget[j].TermType == expiredBudget[i].TermType && activeBudget[j].ServiceId == expiredBudget[i].ServiceId)
                    //        {
                    //            expiredBudget.RemoveAt(i);
                    //        }

                    //    }
                    //}
                    }
                    @if (expiredBudget.Count > 0)
                    {
                        foreach (var budget in expiredBudget)
                        {
                        <tr>
                            @*<td class="text-center">
                                @budget.InsertionOrderId
                            </td>*@
                            <td class="text-center">
                                @{
                            var sdate = @budget.StartDate.HasValue ? @DateTime.Parse(@budget.StartDate.ToString()).ToShortDateString() : null;
                                }
                                @sdate
                            </td>
                            <td class="text-center">
                                @{
                            var edate = @budget.EndDate.HasValue ? @DateTime.Parse(@budget.EndDate.ToString()).ToShortDateString() : null;
                                }
                                @edate
                            </td>
                            <td class="text-center">
                                @string.Format("{0:c}", @budget.TotalBudget)
                            </td>

                            @*<td class="text-center">
                                @string.Format("{0:c}", @budget.UnchargedAmount)
                            </td>*@
                            <td class="text-center">
                                @{
                            var Recurring = ((bool)@budget.IsRecurring) ? ((bool)@budget.IsRequireNoticeToCharge) ? "Recurring With Notice" : "Recurring" : "Non Recurring";
                                }
                                @Recurring
                            </td>
                            <td class="text-center">
                                @{
                            var Service = (@budget.ServiceId == Constants.LOCAL) ? Constants.LOCAL_TEXT : (@budget.ServiceId == Constants.LONG) ? Constants.LONG_TEXT : Constants.BOTH_TEXT;
                                }
                                @Service
                            </td>
                            @*<td class="text-center">
                           
                                @if (@Recurring == "Recurring With Notice" && @budget.RemainingBudget == 0)
                                {
                                    
                                    if(@budget.IsOneTimeRenew)
                                    {
                                        <p><input type="button" value="Renewed" id="expireRenew@(budget.ServiceId)"  data-id ="@budget.ServiceId" class = "btn btn-sm btn-info renewBudget"  disabled="disabled"/></p>
                                    }
                                    else
                                    {
                                        <p><input type="button" value="Renew" id="expireRenew@(budget.ServiceId)"  data-id ="@budget.ServiceId" class = "btn btn-sm btn-info renewBudget"/></p>
                                    }
                                }
                            </td>*@
                        </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
}
<div class="row">
    <div class="col-md-12">
        <p class="clearfix"></p>
        <a href="#" onclick="history.go(-1);return false;" class="btn btn-primary btnSpacing">Back To List</a>

    </div>
</div>
